# Apache configuration file (see httpd.apache.org/docs/2.2/mod/quickreference.html)

# disable directory listing
Options -Indexes

DB Update

CREATE DATABASE IF NOT EXISTS `e-waste`;

CREATE TABLE IF NOT EXISTS `users` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_user` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `telp` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `alamat` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `point` integer DEFAULT 0,
  `is_kurir` tinyblob NOT NULL,
  `is_admin` tinyblob NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `users_email_unique` (`email_user`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


CREATE TABLE IF NOT EXISTS `kurir` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `email_kurir` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `point_kurir` integer DEFAULT 0,
  PRIMARY KEY (`id`),
  FOREIGN KEY (email_kurir) REFERENCES users(email_user),
  UNIQUE KEY `kurir_email_unique` (`email_kurir`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE IF NOT EXISTS `orders` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `email_user` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `daerah` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `total_sampah` integer DEFAULT 0,
  `kategori_sampah` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_kurir` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `tanggal_order` timestamp DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`email_kurir`) REFERENCES `kurir`(`email_kurir`),
  FOREIGN KEY (`email_user`) REFERENCES `users`(`email_user`),
  INDEX (`total_sampah`, `email_user`, `daerah`, `email_kurir`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=UTF8MB4_UNICODE_CI;

CREATE TABLE IF NOT EXISTS `kategori_terbanyak` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `nama_kategori` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `jumlah_order` integer DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE KEY `kategori_nama_unique` (`nama_kategori`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

# logic metode query:

## melihat data berapa banyak sampah yang sudah di order, format data label event change setText("blabla")
## melihat berapa banyak user yang sudah daftar, format data label event change setText("blabla")
## melihat berapa banyak kurir yang sudah daftar, format data label event change setText("blabla")

## Melihat 10 kategori terbanyak yang sering di sebutkan saat order,
format data JTable yang berisi 2 baris dan baris pertama nama kategori sampah, 
yang kedua jumlah kategori terbanyak yang sering di sebutkan saat order.

## melihat 10 user yang point nya paling banyak,
format data JTable yang berisi 2 baris, baris pertama berisi nama user, 
dan baris ke 2 jumlah berapa banyak point user tersebut.

## Melihat 10 daerah terbanyak yang sering di sebutkan saat order,
format data JTable yang berisi 2 baris, baris pertama berisi nama daerah, 
dan baris ke 2 jumlah daerah terbanyak yang sering di sebutkan saat order.

## melihat sudah ada apa saja kartegori sampah yang telah di order, 
format data JTable yang berisi 2 baris, baris pertama berisi nama kategori sampah, 
dan baris ke 2 jumlah kartegori tersebut terorder.

## melihat data semua order berdasarkan username, daerah, total sampah, 
dan kurir, format data JTable.

Coba buatkan class dao untuk memuat logic metode query di atas

*NOTE: Jika sekiranya dari struktur table ada yang kurang, maka boleh anda ubah atau tambah untuk di sesuaikan dengan query

## CRUD User

## CRUD kurir

## alur CRUD order dari logi bisnis apl:User mengorder sampah dengan menginput, total sampah, kategori sampah, memilih siapa kurirnya yang jika default maka pilihkan kurir random,
dan dengan mengorder, point user tersebut bertambah 6, begitu pula kurir nya akan mendapatkan point kurir 12 dengan dipilih nya kurir darimengorder sampah user tersebut.

Maka coba buatkan dao untuk memuat logic metode query di atas

*NOTE: Jika sekiranya dari struktur table ada yang kurang, maka boleh anda ubah atau tambah untuk di sesuaikan dengan query


List<Object[]> getTop10WasteCategories()
List<Object[]> getTop10UsersWithMostPoints()
List<Object[]> getTop10Regions()
List<Object[]> getOrderedWasteCategories()
List<Object[]> getAllOrders()

maka jika ingin mengambil data dari query di EwasteDao dari function seperti di atas, bagaimana cara nya?


============================

Cari order dengan daerah yang di sebutkan paling banyak data order

beginilah alur bisnis dari apl itu:

================

User mengorder sampah dengan menginput, total sampah, kategori apa saja sampah itu, memilih siapa kurirnya yang jika default pilihkan kurir random,
dan dengan mengorder point user tersebut bertambah 6, begitu pula kurir nya akan mendapatkan point kurir 12 dengan dipilih nya kurir tersebut 
jika mengorder sampah dari user tersebut, dan view kategori sampah akan bertambah berdasarkan kategori sampah akan bertambah berdasarkan 
kartegori sampah apa yang di pilih apa yang di order

=================



=============================

user id
user name
user pw
user telp
user Alamat

Users, Kurir, Sampah


CREATE DATABASE e-waste;

CREATE TABLE IF NOT EXISTS `users` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_user` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `telp` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `alamat` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `point` integer DEFAULT 0,
  `is_kurir` tinyblob NOT NULL,
  `is_admin` tinyblob NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `users_email_unique` (`email_user`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


CREATE TABLE IF NOT EXISTS `kurir` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `email_kurir` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `point_kurir` integer DEFAULT 0,
  PRIMARY KEY (`id`),
  FOREIGN KEY (email_kurir) REFERENCES users(email_user),
  UNIQUE KEY `kurir_email_unique` (`email_kurir`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


CREATE TABLE IF NOT EXISTS `sampah` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `total_sampah` integer COLLATE utf8mb4_unicode_ci NOT NULL,
  `kategori_sampah` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `alamat_user` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_user` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email_kurir` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `view_sampah` integer DEFAULT 0,
  PRIMARY KEY (`id`),
  FOREIGN KEY (email_kurir) REFERENCES kurir (email_kurir),
  FOREIGN KEY (email_user) REFERENCES users (email_user)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE IF NOT EXISTS `orders` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `daerah` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `total_sampah` integer NOT NULL,
  `kurir_email` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `tanggal_order` timestamp DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  FOREIGN KEY (`kurir_email`) REFERENCES `kurir`(`email_kurir`),
  INDEX (`username`, `daerah`, `kurir_email`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE IF NOT EXISTS `kategori_sampah` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT,
  `nama_kategori` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL,
  `jumlah_order` integer DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE KEY `kategori_nama_unique` (`nama_kategori`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;


# SRS yang harus ada di home.java:

## melihat data berapa banyak sampah yang sudah di order, format data label event change setText("blabla")
## berapa banyak user yang sudah daftar, format data label event change setText("blabla")
## berapa banyak kurir yang sudah daftar, format data label event change setText("blabla")

## Melihat 10 kategori sampah apa saja yang yang sering di order,
format data JTable yang berisi 2 baris dan baris pertama nama kategori sampah, 
yang kedua jumlah kategori tersebut terorder.

## melihat 10 user yang point nya paling banyak,
format data JTable yang berisi 2 baris, baris pertama berisi nama user, 
dan baris ke 2 jumlah berapa banyak point user tersebut.

## Melihat 10 daerah terbanyak yang sering mengorder sampah,
format data JTable yang berisi 2 baris, baris pertama berisi nama daerah, 
dan baris ke 2 jumlah sampah yang terorder di daerah tersebut.

## melihat sudah ada apa saja kartegori sampah yang telah di order, 
format data JTable yang berisi 2 baris, baris pertama berisi nama kategori sampah, 
dan baris ke 2 jumlah kartegori tersebut terorder.

## melihat data semua order berdasarkan username, daerah, total sampah, 
dan kurir, format data JTable.

Dari data db di atas buatkan dao untuk menghandel query setiap logika di home dan buatkan class untuk membuat pemanggilan SRS yang harus ada di home.java itu

==================

# Logika kurir:
yang di ambil kurir ke user adalah email dan merubah colom is_kurir di user menjadi true
di apl kurir bisa di lihat 'siapa kurir yang sering mengantar sampah'

# Logika user memesan sampah:
User meminta reques ke apl, dan di form reques user memilih apa 
saja jens sampah yang ia miliki, dan user juga memilih kurir 
mana yang ada di sekitar nya atau bisa di pilih secara random
di apl user bisa dilihat 'siapa user yang paling sering order sampah'

# logika sampah
di apl sampah di munculkan 'top sampah perdaerah' dan 'top sampah perkategori'

Dari data db di atas dengan logika seperti yang tertera maka bagaimana membuat SampahDao.java dan KurirDao.java

Contoh MemberDao.java sebagai reverensi:



kurir dengan id sekian harus mengirimkan sampah dari user id sekian

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
